package main

import (
	"log"
	"net"

	"github.com/elliaaan/statistics-service/db"
	"github.com/elliaaan/statistics-service/internal/statistics"
	"github.com/elliaaan/statistics-service/models"

	statisticspb "github.com/elliaaan/proto-gen/pb/statistics"

	"github.com/nats-io/nats.go"
	"google.golang.org/grpc"
)

func main() {
	// 1. –ü–æ–¥–∫–ª—é—á–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
	database := db.InitDB()
	if err := database.AutoMigrate(&models.Event{}); err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü—ã Event: %v", err)
	}

	// 2. –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ NATS
	nc, err := nats.Connect(nats.DefaultURL)
	if err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ NATS: %v", err)
	}
	defer nc.Drain()

	// 3. –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏—è –æ—Ç order/inventory —Å–µ—Ä–≤–∏—Å–æ–≤
	statistics.SubscribeToOrderCreated(nc, database)
	// TODO: statistics.SubscribeToInventoryUpdated(nc, database) –µ—Å–ª–∏ –±—É–¥–µ—Ç –Ω—É–∂–Ω–æ

	// 4. –°–æ–∑–¥–∞—ë–º —Å–µ—Ä–≤–∏—Å –∏ gRPC —Å–µ—Ä–≤–µ—Ä
	service := &statistics.Service{DB: database}
	server := &statistics.GRPCServer{Service: service}

	grpcServer := grpc.NewServer()
	statisticspb.RegisterStatisticsServiceServer(grpcServer, server)

	listener, err := net.Listen("tcp", ":8082")
	if err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ gRPC-—Å–µ—Ä–≤–µ—Ä–∞: %v", err)
	}

	log.Println("üìä Statistics Service –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8082")
	if err := grpcServer.Serve(listener); err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ gRPC Serve: %v", err)
	}
}
